"""recreate init schema

Revision ID: b3bf7ca54a70
Revises: 1652add7b7e5
Create Date: 2025-08-23 10:34:04.869743
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql as pg


# revision identifiers, used by Alembic.
revision = 'b3bf7ca54a70'
down_revision = '3c25fab13c32'\nbranch_labels = None\ndepends_on = None\nnds_on = None

# Define enums with create_type=False to prevent auto-creation during table DDL
role_enum = pg.ENUM('admin', 'supervisor', 'operations', 'logistics', name='role', create_type=False)
order_status_enum = pg.ENUM('PendingPayment', 'Paid', 'Cancelled', 'Refunded', name='order_status', create_type=False)
fulfillment_status_enum = pg.ENUM('Processing', 'ReadyToShip', name='fulfillment_status', create_type=False)
reservation_status_enum = pg.ENUM('Active', 'Released', 'Consumed', 'Expired', name='reservation_status', create_type=False)
shipment_status_enum = pg.ENUM('Dispatched', 'InTransit', 'Delivered', 'Returned', name='shipment_status', create_type=False)

def upgrade() -> None:
    # Pre-create enum types if they do not already exist
    bind = op.get_bind()
    for enum_type in (
        role_enum,
        order_status_enum,
        fulfillment_status_enum,
        reservation_status_enum,
        shipment_status_enum,
    ):
        enum_type.create(bind, checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('carts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_carts'))
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('slug', sa.String(length=160), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    op.create_index(op.f('ix_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_table('coupons',
    sa.Column('code', sa.String(length=40), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('value', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_coupons'))
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('flags', sa.JSON(), nullable=True),
    sa.Column('compare_at_price', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products'))
    )
    op.create_index(op.f('ix_products_slug'), 'products', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', role_enum, nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_table('zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('fee', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_zones')),
    sa.UniqueConstraint('name', name=op.f('uq_zones_name'))
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=120), nullable=False),
    sa.Column('entity', sa.String(length=120), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('before', sa.JSON(), nullable=True),
    sa.Column('after', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], name=op.f('fk_audit_logs_actor_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cart_id', sa.Integer(), nullable=True),
    sa.Column('totals', sa.JSON(), nullable=True),
    sa.Column('status', order_status_enum, nullable=False),
    sa.Column('payment_ref', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], name=op.f('fk_orders_cart_id_carts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_orders_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    op.create_index(op.f('ix_orders_status'), 'orders', ['status'], unique=False)
    op.create_table('state_zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=80), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], name=op.f('fk_state_zones_zone_id_zones'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_state_zones')),
    sa.UniqueConstraint('state', name=op.f('uq_state_zones_state'))
    )
    op.create_table('variants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=False),
    sa.Column('size', sa.String(length=64), nullable=True),
    sa.Column('color', sa.String(length=64), nullable=True),
    sa.Column('price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_variants_product_id_products'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_variants')),
    sa.UniqueConstraint('sku', name='uq_variants_sku')
    )
    op.create_index(op.f('ix_variants_product_id'), 'variants', ['product_id'], unique=False)
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=False),
    sa.Column('state', sa.String(length=80), nullable=False),
    sa.Column('city', sa.String(length=120), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_addresses_order_id_orders'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_addresses')),
    sa.UniqueConstraint('order_id', name=op.f('uq_addresses_order_id'))
    )
    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], name=op.f('fk_cart_items_cart_id_carts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], name=op.f('fk_cart_items_variant_id_variants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cart_items')),
    sa.UniqueConstraint('cart_id', 'variant_id', name='uq_cartitem_cart_variant')
    )
    op.create_index(op.f('ix_cart_items_cart_id'), 'cart_items', ['cart_id'], unique=False)
    op.create_index(op.f('ix_cart_items_variant_id'), 'cart_items', ['variant_id'], unique=False)
    op.create_table('fulfillments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('status', fulfillment_status_enum, nullable=False),
    sa.Column('packed_by', sa.Integer(), nullable=True),
    sa.Column('packed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_fulfillments_order_id_orders'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['packed_by'], ['users.id'], name=op.f('fk_fulfillments_packed_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fulfillments')),
    sa.UniqueConstraint('order_id', name=op.f('uq_fulfillments_order_id'))
    )
    op.create_index(op.f('ix_fulfillments_status'), 'fulfillments', ['status'], unique=False)
    op.create_table('inventory',
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('safety_stock', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], name=op.f('fk_inventory_variant_id_variants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('variant_id', name=op.f('pk_inventory'))
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('on_sale', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_order_items_order_id_orders'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], name=op.f('fk_order_items_variant_id_variants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_items'))
    )
    op.create_index(op.f('ix_order_items_order_id'), 'order_items', ['order_id'], unique=False)
    op.create_table('refunds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('reason', sa.String(length=160), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('paystack_ref', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_refunds_created_by_users')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_refunds_order_id_orders'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refunds'))
    )
    op.create_index(op.f('ix_refunds_order_id'), 'refunds', ['order_id'], unique=False)
    op.create_table('reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('status', reservation_status_enum, nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], name=op.f('fk_reservations_cart_id_carts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], name=op.f('fk_reservations_variant_id_variants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reservations'))
    )
    op.create_index(op.f('ix_reservations_cart_id'), 'reservations', ['cart_id'], unique=False)
    op.create_index(op.f('ix_reservations_variant_id'), 'reservations', ['variant_id'], unique=False)
    op.create_table('returns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=40), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], name=op.f('fk_returns_approved_by_users')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_returns_order_id_orders'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_returns'))
    )
    op.create_index(op.f('ix_returns_order_id'), 'returns', ['order_id'], unique=False)
    op.create_table('stock_ledger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('delta', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=80), nullable=False),
    sa.Column('ref_type', sa.String(length=80), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], name=op.f('fk_stock_ledger_variant_id_variants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_ledger'))
    )
    op.create_index(op.f('ix_stock_ledger_variant_id'), 'stock_ledger', ['variant_id'], unique=False)
    op.create_table('fulfillment_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fulfillment_id', sa.Integer(), nullable=False),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fulfillment_id'], ['fulfillments.id'], name=op.f('fk_fulfillment_items_fulfillment_id_fulfillments'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_items.id'], name=op.f('fk_fulfillment_items_order_item_id_order_items'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fulfillment_items'))
    )
    op.create_index(op.f('ix_fulfillment_items_fulfillment_id'), 'fulfillment_items', ['fulfillment_id'], unique=False)
    op.create_table('return_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('return_id', sa.Integer(), nullable=False),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('condition', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_items.id'], name=op.f('fk_return_items_order_item_id_order_items'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['return_id'], ['returns.id'], name=op.f('fk_return_items_return_id_returns'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_return_items'))
    )
    op.create_index(op.f('ix_return_items_return_id'), 'return_items', ['return_id'], unique=False)
    op.create_table('shipments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fulfillment_id', sa.Integer(), nullable=False),
    sa.Column('courier', sa.String(length=80), nullable=False),
    sa.Column('tracking_id', sa.String(length=160), nullable=False),
    sa.Column('status', shipment_status_enum, nullable=False),
    sa.Column('dispatched_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['fulfillment_id'], ['fulfillments.id'], name=op.f('fk_shipments_fulfillment_id_fulfillments'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipments')),
    sa.UniqueConstraint('fulfillment_id', name=op.f('uq_shipments_fulfillment_id'))
    )
    op.create_index(op.f('ix_shipments_status'), 'shipments', ['status'], unique=False)
    op.create_index(op.f('ix_shipments_tracking_id'), 'shipments', ['tracking_id'], unique=False)
    op.create_table('shipment_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shipment_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=80), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.Column('occurred_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], name=op.f('fk_shipment_events_shipment_id_shipments'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipment_events'))
    )
    op.create_index(op.f('ix_shipment_events_shipment_id'), 'shipment_events', ['shipment_id'], unique=False)
    op.create_table('product_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('alt_text', sa.String(length=255), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False, server_default='0'),
    sa.Column('is_primary', sa.Boolean(), nullable=False, server_default=sa.text('false')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_images_product_id_products'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_images'))
    )
    op.create_index(op.f('ix_product_images_product_id'), 'product_images', ['product_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_shipment_events_shipment_id'), table_name='shipment_events')
    op.drop_table('shipment_events')
    op.drop_index(op.f('ix_shipments_tracking_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_status'), table_name='shipments')
    op.drop_table('shipments')
    op.drop_index(op.f('ix_return_items_return_id'), table_name='return_items')
    op.drop_table('return_items')
    op.drop_index(op.f('ix_fulfillment_items_fulfillment_id'), table_name='fulfillment_items')
    op.drop_table('fulfillment_items')
    op.drop_index(op.f('ix_stock_ledger_variant_id'), table_name='stock_ledger')
    op.drop_table('stock_ledger')
    op.drop_index(op.f('ix_returns_order_id'), table_name='returns')
    op.drop_table('returns')
    op.drop_index(op.f('ix_reservations_variant_id'), table_name='reservations')
    op.drop_index(op.f('ix_reservations_cart_id'), table_name='reservations')
    op.drop_table('reservations')
    op.drop_index(op.f('ix_refunds_order_id'), table_name='refunds')
    op.drop_table('refunds')
    op.drop_index(op.f('ix_order_items_order_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_table('inventory')
    op.drop_index(op.f('ix_fulfillments_status'), table_name='fulfillments')
    op.drop_table('fulfillments')
    op.drop_index(op.f('ix_cart_items_variant_id'), table_name='cart_items')
    op.drop_index(op.f('ix_cart_items_cart_id'), table_name='cart_items')
    op.drop_table('cart_items')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_variants_product_id'), table_name='variants')
    op.drop_table('variants')
    op.drop_table('state_zones')
    op.drop_index(op.f('ix_orders_status'), table_name='orders')
    op.drop_table('orders')
    op.drop_table('audit_logs')
    op.drop_table('zones')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_products_slug'), table_name='products')
    op.drop_table('products')
    op.drop_table('coupons')
    op.drop_index(op.f('ix_categories_slug'), table_name='categories')
    op.drop_table('categories')
    op.drop_table('carts')
    # Drop enum types at the end (if they exist)
    bind = op.get_bind()
    for enum_type in (
        shipment_status_enum,
        reservation_status_enum,
        fulfillment_status_enum,
        order_status_enum,
        role_enum,
    ):
        enum_type.drop(bind, checkfirst=True)
    # ### end Alembic commands ###

